<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>${dataSource.driverClassName}</value>
        </property>
        <property name="jdbcUrl">
            <value>${dataSource.url}</value>
        </property>
        <property name="user">
            <value>${dataSource.username}</value>
        </property>
        <property name="password">
            <value>${dataSource.password}</value>
        </property>

        <!-- 最大连接数 -->
        <property name="maxPoolSize">
            <value>${dataSource.c3p0.max_size}</value>
        </property>

        <!-- 最小连接数 -->
        <property name="minPoolSize">
            <value>${dataSource.c3p0.min_size}</value>
        </property>

        <!-- 最大空闲时间，超时未被使用则连接被抛弃，单位毫秒 -->
        <property name="maxIdleTime">
            <value>${dataSource.c3p0.max_idle_time}</value>
        </property>

        <!-- 获得连接的超时时间,如果超过这个时间,会抛出异常，单位毫秒 -->
        <property name="checkoutTimeout">
            <value>${dataSource.c3p0.checkout_timeout}</value>
        </property>

        <!-- 最大的PreparedStatement的数量 -->
        <property name="maxStatements">
            <value>${dataSource.c3p0.max_statements}</value>
        </property>

        <!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒 -->
        <property name="idleConnectionTestPeriod">
            <value>${dataSource.c3p0.idle_test_period}</value>
        </property>

        <!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
        <property name="acquireIncrement">
            <value>${dataSource.c3p0.acquire_increment}</value>
        </property>
    </bean>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:database.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wizinno.shuhao.*.domain" />

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:SqlMapConfig.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.wizinno.shuhao.*.domain" />
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/wizinno/shuhao/*/persistence/*Mapper.xml</value>
            </list>
        </property>
        <property name="configurationProperties">
            <props>
                <!-- mapUnderscoreToCamelCase属性将表中列名的下划线映射为JavaBean属性的驼峰式命名，默认为false -->
                <prop key="mapUnderscoreToCamelCase">true</prop>
            </props>
        </property>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- 事务管理器 注解方式-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>